//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! [https://github.com/metaplex-foundation/kinobi]
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum OracleError {
    /// 0 (0x0) - Program arithmetic overflowed
    #[error("Program arithmetic overflowed")]
    ArithmeticOverflow,
    /// 1 (0x1) - Request already has an assertion
    #[error("Request already has an assertion")]
    AlreadyAsserted,
    /// 2 (0x2) - Insufficient bond
    #[error("Insufficient bond")]
    InsufficientBond,
}

impl solana_program::program_error::PrintProgramError for OracleError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}
